// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/obiwan007/usersrv/clientsrv/api/storage/ent/client"
	"github.com/obiwan007/usersrv/clientsrv/api/storage/ent/schema"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	clientFields := schema.Client{}.Fields()
	_ = clientFields
	// clientDescDescription is the schema descriptor for description field.
	clientDescDescription := clientFields[0].Descriptor()
	// client.DefaultDescription holds the default value on creation for the description field.
	client.DefaultDescription = clientDescDescription.Default.(string)
	// clientDescName is the schema descriptor for name field.
	clientDescName := clientFields[1].Descriptor()
	// client.DefaultName holds the default value on creation for the name field.
	client.DefaultName = clientDescName.Default.(string)
	// clientDescAddress is the schema descriptor for address field.
	clientDescAddress := clientFields[2].Descriptor()
	// client.DefaultAddress holds the default value on creation for the address field.
	client.DefaultAddress = clientDescAddress.Default.(string)
	// clientDescUserid is the schema descriptor for userid field.
	clientDescUserid := clientFields[3].Descriptor()
	// client.DefaultUserid holds the default value on creation for the userid field.
	client.DefaultUserid = clientDescUserid.Default.(string)
	// clientDescMandantid is the schema descriptor for mandantid field.
	clientDescMandantid := clientFields[4].Descriptor()
	// client.DefaultMandantid holds the default value on creation for the mandantid field.
	client.DefaultMandantid = clientDescMandantid.Default.(string)
}
